- hosts: all
  sudo: yes
  vars: 
    node_count: 2

  tasks:
# node configurations
    - name: Copy members key to Authorized_keys
      copy: 
        src: authorized_keys
        dest: .ssh/authorized_keys
    - name: Create directory for database
      file:
        path: /home/ubuntu/database
        state: directory
    # - name: fomat the volume
    #   filesystem:
    #     fstype: ext4
    #     dev: /dev/vdb
    # - name: Mount volume to ~/database
    #   mount:
    #     path: /home/ubuntu/database
    #     src: /dev/vdb
    #     fstype: ext4  
    #     state: mounted
    - name: release lock
      file:
        state: absent
        path: /var/lib/dpkg/lock
    - name: prepare install CouchDB
      lineinfile:                             
        dest: /etc/apt/sources.list
        line: deb http://apache.bintray.com/couchdb-deb xenial main
        insertafter: EOF
    - name: install CouchDB
      environment: 
          DEBIAN_FRONTEND: noninteractive
      apt:
        name: couchdb
        #update_cache: yes
        force: yes
        allow_unauthenticated: yes  
    #python dependencies
    - name: install pip3
      apt: 
        name: python3-pip
        force: yes
    - name: install tweepy
      pip:
        name: tweepy
        executable: pip3

# #Couchdb configurations

    - name: change CouchDB node name
      lineinfile:
        path: /opt/couchdb/etc/vm.args
        regexp: '^-name '
        line: '-name couchdb@{{inventory_hostname}}'
    
    - name: change couchdb storage directory
      lineinfile:
        path: /opt/couchdb/etc/default.ini
        regexp: '^database_dir ='
        line: 'database_dir = /home/ubuntu/database/couchdb'
    
    - name: change couchdb view index directory
      lineinfile:
        path: /opt/couchdb/etc/default.ini
        regexp: '^view_index_dir ='
        line: 'view_index_dir = /home/ubuntu/database/couchdb'
    
    - name: move couchdb storage to mounted volume
      command: cp /var/lib/couchdb /home/ubuntu/database -R
    
    - name: chage owner of the couchdb from root to CouchDB
      file:
        recurse: yes
        path: /home/ubuntu/database/couchdb
        owner: couchdb
        group: couchdb
    
    - name: bind chttpd to 0.0.0.0
      uri:
        url: http://127.0.0.1:5984/_cluster_setup
        method: POST
        body: '{"action": "enable_cluster", "bind_address":"0.0.0.0", "username": "admin", "password":"admin", "node_count":"4"}'
        headers:
          Content-Type: "application/json"
        status_code: 201

    - name: restart couchdb
      command: /etc/init.d/couchdb restart



- hosts: master
  sudo: yes

  tasks:
    #cluster configuration
    - name: pip install textblob
      pip: 
        name: textblob
        executable: pip3
    - name: pip install textblob
      pip: 
        name: shapely
        executable: pip3
    - name: make dir geojson
      file:
        path: /home/ubuntu/geojson
        state: directory
    - name: move data to server
      copy:
        src: ../geojson/SA3_GEO.json
        dest: /home/ubuntu/geojson/SA3_GEO.json
        directory_mode: yes
    - name: move analyzer to server
      copy:
        src: ../tweetAnalyze.py
        dest: /home/ubuntu/tweetAnalyze.py
    - name: enable_cluster for all nodes
      uri:
        url: http://127.0.0.1:5984/_cluster_setup
        method: POST
        user: admin
        password: admin
        force_basic_auth: yes
        headers:
          Content-Type: 'application/json'
        body: '{"action": "enable_cluster", "bind_address":"0.0.0.0", "username": "admin", "password":"admin", "port": 15984, "node_count": "4", "remote_node": "{{item}}", "remote_current_user": "admin", "remote_current_password": "admin" }'
        status_code: 201
        body_format: json
      with_items: "{{groups['slave']}}"

    - name: add node to cluster
      uri:
        url: http://127.0.0.1:5984/_cluster_setup
        method: POST
        user: admin
        password: admin
        force_basic_auth: yes
        headers:
          Content-Type: 'application/json'
        body: '{"action": "add_node", "host":"{{item}}", "port": "5984", "username": "admin", "password":"admin"}'
        status_code: 201
        body_format: json
      with_items: "{{ groups['slave'] }}"

    - name: fininsh cluster
      uri:
        url: http://127.0.0.1:5984/_cluster_setup
        method: POST
        user: admin
        password: admin
        force_basic_auth: yes
        headers:
          Content-Type: 'application/json'
        body: '{"action": "finish_cluster"}'
        status_code: 201
    - name: create twitter database
      uri:
        url: http://127.0.0.1:5984/twitter
        method: PUT
        user: admin
        password: admin
        force_basic_auth: yes
        status_code: 202
    - name: create geo database
      uri:
        url: http://127.0.0.1:5984/geo
        method: PUT
        user: admin
        password: admin
        force_basic_auth: yes
        status_code: 202
    - name: create conclusion database
      uri:
        url: http://127.0.0.1:5984/conclusion
        method: PUT
        user: admin
        password: admin
        force_basic_auth: yes
        status_code: 202
# apache server configuration
    - name: install apache
      apt: 
        name: apache2
        force: yes
    - name: create directory for web page
      file:
        path: /home/ubuntu/mysite
        state: directory
    - name: copy website files to server
      copy:
        src: "{{ item }}"
        dest: /home/ubuntu/mysite
      with_fileglob:
        - ../geojson/*
    - name: add directory to server
      lineinfile:
        path: /etc/apache2/apache2.conf
        insertafter: <\/Directory>
        line: "<Directory /home/ubuntu/mysite>\n\tOptions Indexes FollowSymLinks\n\tAllowOverride None\n\tRequire all granted\n</Directory>"
    
    - name: change service directory of current site
      lineinfile:
        path: /etc/apache2/sites-enabled/000-default.conf
        regexp: 'DocumentRoot'
        line: "\tDocumentRoot /home/ubuntu/mysite"
    - name: restart apache2 server
      command: service apache2 restart
    - name: copy web page to master node
      copy:
        src: ../geojson/test.html
        dest: /home/ubuntu/mysite/index.html    

- hosts: all
  sudo: yes
  tasks:
#harvester configurations
      
    - name: make directory for harvester source code
      file:
        path: /home/ubuntu/harvester
        state: directory
    - name: put harvester source code to server
      copy:
        src: ../getTweet.py
        dest: /home/ubuntu/harvester
    - name: put harvester config file to server
      copy:
        src: ../twitterKey_{{play_hosts.index(inventory_hostname)}}.py
        dest: /home/ubuntu/harvester/twitterKey.py
    - name: run harvester
      shell: nohup python3 /home/ubuntu/harvester/test.py >/dev/null 2>&1 &
